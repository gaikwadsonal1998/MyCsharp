

//Final Assessement Quesstion 1
class Product{
        string name;
        string productCode;
        string brandName;
        int stockLeft;
        double price;
        DateTime expiryDate;
        public string Name{ get {  return name; } set { name = value; } }
        public string ProductCode { get { return productCode; } set { productCode = value; } }
        public string BrandName { get { return brandName; } set { brandName = value; } }
        public int StockLeft { get { return stockLeft; } set { stockLeft = value; } }
        public double Price { get { return price; } set { price = value; } }
        public DateTime ExpiryDate { get { return expiryDate; } set {  expiryDate=value; } }
        public Product() { }
        public Product(string name, string productCode, string brandName, int stockLeft, double price, DateTime expiryDate)
        {
            this.name = name;this.productCode = productCode;
            this.brandName = brandName;this.stockLeft = stockLeft;
			this.price = price;this.expiryDate = expiryDate;
        }
       public override string ToString()
        {
            string str = "Name:" + name + "\nProductCode:" + productCode + "\nBrandName:" + brandName + "\nStockLeft:" + stockLeft + "\nPrice:" + price + "\nExpiryDate:" + expiryDate;
            return str;
        }
        public  bool Equals(Product p)
        {
            if (this.name.ToLower() == p.name.ToLower() & this.productCode == p.productCode)
                return true;
            else
                return false;
        }
    }



// Question 2  Type -1 


class Product
    {
        public string ProductCode;
        public string Name;
        public double Price;
        public string Brand;
    }
    class Shop
    {
        public string Name;
        public List<Product> ProdList=new List<Product>();
        public Shop() { }
        public Shop(string name, List<Product> productList)
        {
            Name = name;
           This. ProdList = productList;
        }
		
		//part 2
		
		       public void AddProductToShop(Product p)
        {
            if (ProdList.Count == 0)
                ProdList.Add(p);
            else
            {
           Product obj = ProdList.Find(x => x.Name.ToLower() == p.Name.ToLower() && x.ProductCode == p.ProductCode);
                if ((ProdList.Contains(obj)) == false)
                    ProdList.Add(p);
                
            }
        }


public bool RemoveProductFromShop(string productCode)
        {
            bool flag;
            Product obj = ProdList.Find(x =>  x.ProductCode == productCode);
            if ((ProdList.Contains(obj)) == true)
            {
                flag = true;
                ProdList.Remove(obj);
            }
            else
                flag = false;
            return flag;
        }
    }

class ProductBO
    {
        public List<Product> FindProduct(List<Product> productList, string brand)
            {
            var res = from p in productList
                      where p.Brand == brand
                      select p;
            return res.ToList();
//Using for loop 
List<Product> l1=new List<Product>();
For(int i=0 ;i< prodList.Count ;i++)
{
If(prodList[i].Brand== brand)
L1.Add(prodList[i]);
}
Return l1;
  
  
  public List<Product> FindProduct(List<Product> productList, double price)
        {
            var res = from p in productList
                      where p.Price == price
                      select p;
            return res.ToList();
        }

public Hashtable BrandWiseCount(List<Product> productList )
        {       
           var res= from p in productList
                      group p by p.Brand into g
                      select new  { brand=g.Key,count=g.Count() };
            Hashtable ht1 = new Hashtable();
            foreach(var x in res)
            {
                ht1.Add(x.brand, x.count);
            }
            return ht1;
        }
    }

**************

	Question 2.2 
	
	Class Customer
{
Public string cid,cname,city;
Public int age;
}
Class Shop 
{
Public string sid,sname;
Public List<Customer> Normal_Customers=new List<Customer>();
Public List<Customer> Premeium_Customers=new List<Customer>();
//Constructors


Public void AddCustomer(Customer c, string type)
{
If(type==”Normal”)
Normal_Customers.Add( c);
Else if(type==”Premium”)
Premeium_Customers.Add( c );
}


Public bool RemoveCustomer( string  id)
{
 bool flag1=false,   flag2=false;
Customer c1 = Normal_Customers.Find( x => x.cid == id);
If(c1 != null)
{
Normal_Customers.Remove(c1) ;
Flag1= true ;
}



Customer c2 = Premium_Customers.Find( x => x.cid == id);
If(c2 != null)
{
Premium_Customers.Remove(c2) ;
Flag2= true ;
}
If( flag1 == true  | flag2 == true)
{
return true;
}
Else 
Return false ;
}
